stages:
  - test
  - build
  - deploy

default:
  image: ghcr.io/binkhq/python:3.9


test:style: &test
  stage: test
  before_script:
    - pipenv install --dev --system --deploy --ignore-pipfile
    - pip freeze
  script:
    - flake8
    - black --line-length 120 --check .
    - isort --check --line-length 120 --profile black .


build:staging: &build
  stage: build
  needs: ["test:style"]
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - export CTAG=$(echo -n "$CI_PIPELINE_CREATED_AT" | sed s/\://g)
  script:
    - docker build --pull --tag "$CI_REGISTRY/$CI_PROJECT_NAME:$CTAG" .
    - docker push "$CI_REGISTRY/$CI_PROJECT_NAME:$CTAG"
  only:
    - master


deploy:staging: &deploy
  stage: deploy
  needs: ["build:staging"]
  image: binkcore.azurecr.io/tagbot:latest
  environment:
    name: staging
  before_script:
    - export CTAG=$(echo -n "$CI_PIPELINE_CREATED_AT" | sed s/\://g)
  script:
    - tagbot
      --username "$CI_REGISTRY_USER"
      --password "$CI_REGISTRY_PASSWORD"
      --source "$CI_REGISTRY/$CI_PROJECT_NAME:$CTAG"
      --tag "$CI_ENVIRONMENT_NAME-$CTAG"
    - tagbot
      --username "$CI_REGISTRY_USER"
      --password "$CI_REGISTRY_PASSWORD"
      --source "$CI_REGISTRY/$CI_PROJECT_NAME:$CTAG"
      --tag "$CI_ENVIRONMENT_NAME"
  only:
    - master
